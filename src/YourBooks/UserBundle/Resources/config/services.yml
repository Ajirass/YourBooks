parameters:
#    your_books_user.example.class: YourBooks\UserBundle\Example

#services:
#    your_books_user.example:
#        class: %your_books_user.example.class%
#        arguments: [@service_id, "plain_value", %parameter%]

services:
    your_books.registration.form.type:
        class: YourBooks\UserBundle\Form\Type\RegistrationFormType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name: form.type, alias: yourbooks_user_registration }
    your_books.profile.form.type:
            class: YourBooks\UserBundle\Form\Type\ProfileFormType
            arguments: [%fos_user.model.user.class%]
            tags:
                - { name: form.type, alias: yourbooks_user_profile }
    yourbooks.user.user_registration_listener:
            class: YourBooks\UserBundle\ConfirmMail\UserRegistrationListener
            arguments: [@mailer]
            tags:
                - { name: kernel.event_listener, event: userbundle.confirmmail.user_register, method: onUserRegister }
    yourbooks.mailer.registration:
          class: YourBooks\UserBundle\Mailer\MailerCustom
          public: false
          arguments:
              - '@mailer'
              - '@router'
              - '@templating'
              -
                  confirmation.template: '%fos_user.registration.confirmation.template%'
                  resetting.template: '%fos_user.resetting.email.template%'
                  from_email:
                      confirmation: '%fos_user.registration.confirmation.from_email%'
                      resetting: '%fos_user.resetting.email.from_email%'
    your_books_user.user.listener:
        class: YourBooks\UserBundle\Listener\UserListener
        arguments:
            - @event_dispatcher
        tags:
            - { name: doctrine.event_listener, event: preUpdate, method: preUpdate }